package mrezno.programiranje;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Iterator;

public class Server {

	public static final int TCP_PORT = 9000;
	private static ArrayList<String> usernames = new ArrayList<String>();

	public static void main(String[] args) {
		try {
			int clientCounter = 0;
			// slusaj zahteve na datom portu
			@SuppressWarnings("resource")
			ServerSocket ss = new ServerSocket(TCP_PORT);
			System.out.println("Server running...");
			while (true) {
				Socket sock = ss.accept();
				UserThread ut = new UserThread(sock, clientCounter);
				ut.start();
				System.out.println("Client accepted: " + (++clientCounter));
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
	
	
	private static void handleReqeust(Socket sock, int value) {
		try {
			BufferedReader in = new BufferedReader(
					new InputStreamReader(sock.getInputStream()));

			// inicijalizuj izlazni stream
			PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(
					sock.getOutputStream())), true);
			// procitaj zahtev
			String request = in.readLine();
			String command = request.split("<")[0];
			String username = "";
			if (!command.equals("LIST")) {
				username = request.split("<")[1].split(">")[0];				
			}
			switch (request) {
			case "ADD":
				usernames.add(username);

				// odgovori na zahtev
				out.println("Success");

				break;
			case "REMOVE":
				
				if (usernames.contains(username)) {
				usernames.remove(username);

				// odgovori na zahtev
				out.println("Success");
				} else {
					// odgovori na zahtev
					out.println("User not found");	
				}
				break;
			case "FIND":
				if (!usernames.contains(username)) {
					// odgovori na zahtev
					out.println("User not found");	
					} else {
						// odgovori na zahtev
						for (String user : usernames) {
							if (user.equals(username)) {
								out.println(user);								
							}
						}
					}
				
				break;
			case "LIST":
				for (String user : usernames) {
					out.print(user + ", ");
				}

				// odgovori na zahtev
				out.println("Success");

				break;
			}
			System.out.println(request);

			// zatvori konekciju
			in.close();
			out.close();
			sock.close();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

}