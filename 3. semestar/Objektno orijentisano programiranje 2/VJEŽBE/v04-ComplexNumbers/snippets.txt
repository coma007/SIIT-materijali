#include <iostream>
#include "myComplex.h" // write your own header file "myComplex.h"

using namespace std;

int main(int argc, char** argv) {

	Complex a(3.0, 4.0); // initialize to (3, 4i)
	Complex b(5.0, 7.0); // initialize to (5, 7i)
	Complex c;
	cout << "a (" << a.getReal() << ", " << a.getImag() << "i) " << endl;
	cout << "b (" << b.getReal() << ", " << b.getImag() << "i) " << endl;
	c = a.add(b);
	cout << "a + b = (" << c.getReal() << ", " << c.getImag() << "i) " << endl;
	c = a.sub(b);
	cout << "a - b = (" << c.getReal() << ", " << c.getImag() << "i) " << endl;
	c = a.mul(b);
	cout << "a * b = (" << c.getReal() << ", " << c.getImag() << "i) " << endl;
	c = a.conj();
	cout << "~a = (" << c.getReal() << ", " << c.getImag() << "i) " << endl;
	cout << "Done!" << endl;
	
	return 0;
}

---

#include <iostream>
#include "myComplex.h"

using namespace std;

int main(int argc, char** argv) {

	Complex a(3.0, 4.0);
	Complex b;
	cout << "Enter a complex number :" << endl;
	cin >> b;
	cout << "a (" << a.getReal() << ", " << a.getImag() << "i) " << endl;
	cout << "b " << b << endl;
	cout << "Complex conjugate b is " << ~b << endl;
	cout << "a + b is " << a + b << endl;
	cout << "a - b is " << a - b << endl;
	cout << "a * b is " << a * b << endl;
	//cout << "2 * b is " << b * 2 << endl;
	//cout << "b * 2 is " << 2 * b << endl;
	cout << "Done!" << endl;

	return 0;
}

---

friend istream& operator>>(istream &_in, Complex &_c);

istream& operator>>(istream &_in, Complex &_c){
	float real;
	float imag;	
	_in >> real;
	_in >> imag;
	_c.setReal(real);
	_c.setImag(imag);
	return _in;
}

----

Complex operator+(Complex _c);

Complex Complex::operator+(Complex _c){
	return this->add(_c);
}


